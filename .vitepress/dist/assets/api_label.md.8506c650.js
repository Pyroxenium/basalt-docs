import{_ as a,o as s,c as e,Q as l}from"./chunks/framework.9bc09dc8.js";const b=JSON.parse('{"title":"Label","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/label.md","filePath":"api/label.md"}'),t={name:"api/label.md"},o=l(`<h1 id="label" tabindex="-1">Label <a class="header-anchor" href="#label" aria-label="Permalink to &quot;Label&quot;">​</a></h1><p>A Label object is used to display simple text on the interface.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>autoSize</td><td>bool</td><td>Determines if the label adjusts its size based on the text content</td></tr><tr><td>text</td><td>string</td><td>The actual text content displayed by the label</td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>In the provided example, a new frame is created, and a label is added to it. The label&#39;s text is then set to display &quot;Hello, World!&quot;, showcasing the ease with which you can introduce text elements to your interface using Basalt.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> main </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> basalt.</span><span style="color:#79B8FF;">addFrame</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> aLabel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">addLabel</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#B392F0;">aLabel</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">setText</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> main </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> basalt.</span><span style="color:#005CC5;">addFrame</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> aLabel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">addLabel</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6F42C1;">aLabel</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">setText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello, World!&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div>`,7),n=[o];function p(r,c,i,d,y,h){return s(),e("div",null,n)}const u=a(t,[["render",p]]);export{b as __pageData,u as default};
